package com.abc.accounts;

import com.abc.AccountType;
import com.abc.Transaction;

import java.util.ArrayList;
import java.util.List;

public abstract class Account {

    // == fields ==

    private final int accountNumber;
    private List<Transaction> transactions;


    // == constructor ==

    public Account() {
        this.accountNumber = AccountNumberGenerator.INSTANCE.getNextAccountNumber();
        this.transactions = new ArrayList<>();
    }

    // == public methods ==

    public void deposit(double amount) {
        if (amount <= 0) {
            throw new IllegalArgumentException("amount must be greater than zero");
        } else {
            transactions.add(new Transaction(amount));
        }
    }

    public void withdraw(double amount) {
        if (amount <= 0) {
            throw new IllegalArgumentException("amount must be greater than zero");
        } else {
            transactions.add(new Transaction(-amount));
        }
    }

    abstract double interestEarned();

    public abstract String getStatement ();

    public double sumTransactions() {
        return checkIfTransactionsExist(true);
    }

    private double checkIfTransactionsExist(boolean checkAll) {
        double amount = 0.0;
        for (Transaction t : transactions)
            amount += t.getAmount();
        return amount;
    }

    public int getAccountNumber() {
        return accountNumber;
    }

    public List<Transaction> getTransactions() {
        return new ArrayList<>(transactions);
    }

    public String statementForAccount(Account account) {

        StringBuffer stringBuffer = new StringBuffer();

        //Show account number generated by Singleton class
        stringBuffer.append("Account Number: ").append(account.getAccountNumber()).append("\n");

        //Show account type
        if(account.getAccountType() == AccountType.CHECKING){
            stringBuffer.append("Checking Account\n");

        } else if(account.getAccountType() == AccountType.SAVINGS){
            stringBuffer.append("Savings Account\n");

        } else if(account.getAccountType() == AccountType.MAXI_SAVINGS){
            stringBuffer.append("Maxi Savings Account\n");
        }

        //Now total up all the transactions
        double total = 0.0;
        for (Transaction transaction : account.getTransactions()) {

            stringBuffer.append(transaction.getTransactionType()).append(" ");
            stringBuffer.append(transaction.getAmountString()).append("\n");
            total += transaction.getAmount();
        }
        stringBuffer.append("Total ").append(toDollars(total));

        return stringBuffer.toString();
    }


}
